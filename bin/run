#!/usr/bin/env ruby
# $DEBUG = true
Thread.abort_on_exception = true

require "paint"
require "bundler"
Bundler.setup(:default)

require_relative "../lib/lapidar"

puts "Starting experiment…"

runners = [
  Lapidar.runner(host: '127.0.0.1', port: 9999, neighbors: [{ host: "127.0.0.1", port: 9998 }]),
  Lapidar.runner(host: '127.0.0.1', port: 9998, neighbors: [{ host: "127.0.0.1", port: 9997 }]),
  Lapidar.runner(host: '127.0.0.1', port: 9997, neighbors: [{ host: "127.0.0.1", port: 9999 }])
]

threads = runners.map.with_index(2) do |runner, i|
  [
    Thread.new { sleep(i); runner.start },
    Thread.new { loop { runner.punch_queue << "#{runner.buschtelefon_endpoint.port} #{rand}" } }
  ]
end.flatten

logger_thread = Thread.new do
  sleep(1)

  loop do
    system("clear")
    puts(runners.map do |runner|
      "Runner on port #{runner.buschtelefon_endpoint.port}:\n#{runner.chain.to_colorful_string(5)}"
    end.join("\n"))
    sleep(1)
  end
end

trap "SIGINT" do
  puts "Shutting down…"
  runners.each(&:stop)
  logger_thread.exit
end

sleep(5)
puts 'All inquire their neighbors manually'
runners.reverse.each do |runner|
  sleep(1)
  runner.buschtelefon_endpoint.inquire_remote_neighbors
end

threads.each(&:join)
logger_thread.join
